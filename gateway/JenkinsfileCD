#!/usr/bin/env groovy

node {
    stage('checkout') {
        checkout scm
    }

    docker.image('openjdk:8').inside('-u root -e MAVEN_OPTS="-Duser.home=./"') {
        stage('check java') {
            sh "java -version"
        }

        stage('clean') {
            dir('gateway') {
                sh "chmod +x mvnw"
                sh "./mvnw clean"
            }
        }

        stage('install tools') {
            dir('gateway') {
                sh "./mvnw com.github.eirslett:frontend-maven-plugin:install-node-and-yarn -DnodeVersion=v6.11.1 -DyarnVersion=v0.27.5"
            }
        }

        stage('yarn install') {
            dir('gateway') {
                sh "./mvnw com.github.eirslett:frontend-maven-plugin:yarn"
            }
        }

        stage('backend tests') {
            try {
                dir('gateway') {
                    sh "./mvnw test"
                }
            } catch(err) {
                throw err
            } finally {
                junit '**/target/surefire-reports/TEST-*.xml'
            }
        }

        stage('frontend tests') {
            try {
                dir('gateway') {
                    sh "./mvnw com.github.eirslett:frontend-maven-plugin:yarn -Dfrontend.yarn.arguments=test"
                }
            } catch(err) {
                throw err
            } finally {
                junit '**/target/test-results/karma/TESTS-*.xml'
            }
        }

        stage('packaging') {
            dir('gateway') {
                sh "./mvnw package -Pprod -DskipTests"
//                archiveArtifacts artifacts: '**/target/*.war', fingerprint: true
            }
        }

    }

    def dockerImage
    stage('build docker') {
        dir('gateway') {
            sh "cp -R src/main/docker target/"
            sh "cp target/*.war target/docker/"
            dockerImage = docker.build('fxgateway', 'target/docker')
        }
    }

    stage('publish docker') {
        dir('gateway') {
            docker.withRegistry('https://registry.hub.docker.com', 'docker-login') {
                dockerImage.push 'latest'
            }
        }
    }
}
